spring:
  kafka:
    # kafka 连接地址
    bootstrap-servers: localhost:9092
    producer:
      # 发生错误后，消息重发的次数
      retries: 0
      # 当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数制定了一个批次可以使用的内存大小（单位是 字节）
      batch-size: 16384
      # 设置生产者内存缓冲区的大小
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 : 生产者在成功写入消息之前不会等待任何来自服务器的响应
      # acks=1 : 只要集群的首领节点收到消息，生产者就会收到一个来自服务器的成功响应
      # acks=all : 只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应
      acks: 1
    consumer:
      # 自动提交的时间间隔 在 spring boot 2.x 版本这里采用的值的类型为 Duration 需要符合特定的格式，如 1S,1M,1H,1D
      auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况该作何处理:
      # latest (默认值) 在偏移量无效的情况下，消费者将从最新的记录开始读取数据(在消费者启动之后生成的记录)
      # earliest : 在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 是否自动提交偏移量，默认值是 true，为了避免出现重复数据和数据丢失，可以把它设置为 false，然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      # 在监听器容器中运行的线程数
      concurrency: 5
      # listener 负责 ack，每调用一次，就立即 commit
      ack-mode: manual_immediate
      missing-topics-fatal: false

# 自定义的 kafka 配置项
kafka:
  topic:
    name: email_topic
  group:
    id: email_topic